{"meta":{"title":"Joycessh","subtitle":null,"description":"Life is a journey. What we should care about is not where it's headed but what we see and how we feel.","author":"Joycessh","url":"http://joycessh.xyz"},"pages":[{"title":"404","date":"2018-05-31T14:42:55.000Z","updated":"2018-05-31T14:42:55.737Z","comments":true,"path":"404/index.html","permalink":"http://joycessh.xyz/404/index.html","excerpt":"","text":""},{"title":"about","date":"2018-03-27T15:14:44.000Z","updated":"2018-03-30T15:43:15.247Z","comments":true,"path":"about/index.html","permalink":"http://joycessh.xyz/about/index.html","excerpt":"","text":"关于我正在学习JAVA的路上，一路狂奔，欢迎分享技术。 来自一个未来的攻城狮 QQ: 935484773WECHAT: sosongho"},{"title":"categories","date":"2018-03-27T14:21:57.000Z","updated":"2018-03-30T06:10:22.983Z","comments":true,"path":"categories/index.html","permalink":"http://joycessh.xyz/categories/index.html","excerpt":"","text":""},{"title":"search","date":"2018-05-31T14:42:17.000Z","updated":"2018-05-31T14:42:17.432Z","comments":true,"path":"search/index.html","permalink":"http://joycessh.xyz/search/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-03-27T14:16:03.000Z","updated":"2018-03-30T06:10:23.307Z","comments":true,"path":"tags/index.html","permalink":"http://joycessh.xyz/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"CentOS系统下安装mysql的详细步骤","slug":"CentOS系统下安装mysql的详细步骤","date":"2018-10-12T14:37:25.000Z","updated":"2018-10-12T14:38:29.345Z","comments":true,"path":"CentOS系统下安装mysql的详细步骤.html","link":"","permalink":"http://joycessh.xyz/CentOS系统下安装mysql的详细步骤.html","excerpt":"本文记录的是我结合网络上的资料在CentOS系统安装mysql的步骤说明","text":"本文记录的是我结合网络上的资料在CentOS系统安装mysql的步骤说明 操作环境 CentOS-6.5-x86_64 mysql-5.6.41 mysql的安装包版本为：mysql-5.6.41-linux-glibc2.12-x86_64.tar.gz 下载地址https://dev.mysql.com/downloads/mysql/5.6.html#downloads 详细安装步骤： 添加mysql用户组和mysql用户 # groupadd mysql # useradd -r -g mysql mysql 把mysql二进制文件解压到目录：/usr/local tar zxvf mysql-5.6.41-linux-glibc2.12-x86_64.tar.gz -C /usr/local 重命名 12# cd /usr/local# mv mysql-5.6.41-linux-glibc2.12-x86_64 mysql 修改目录/usr/local/mysql的所属用户和组别 # chown -R mysql:mysql /usr/local/mysql mysql初始化 以mysql用户执行脚本mysql_install_db，目录：/usr/local/mysql # ./scripts/mysql_install_db --user=mysql --basedir=/usr/local/mysql/ --datadir=/var/lib/mysql/ 复制mysql 启动脚本mysql.server 到/etc/init.d/mysqld，并修改权限 12# cp support-files/mysql.server /etc/init.d/mysqld# chmod 755 /etc/init.d/mysqld 配置mysql，修改/etc/my.conf # cp support-files/my-default.cnf /etc/my.cnf1234[mysqld]basedir=/usr/local/mysqldatadir=/var/lib/mysqlsocket=/var/lib/mysql/mysql.sock 通过chkconfig命令将mysqld服务加入到自启动服务项中 1234# cd /etc/init.d# chkconfig --add mysqld检查是否成功将mysql加入自启动服务# chkconfig --list mysqld 设置环境变量，修改/etc/profile 123# vim /etc/bash_profileexport MYSQL_HOME=/usr/local/mysqlexport PATH=$PATH:$MYSQL_HOME/bin 重新加载# source /etc/profile 启动mysql服务service mysqld start# mysql 报错及解决办法 在登录时报错： 1ERROR 2002 (HY000): Can&apos;t connect to local MySQL server through socket &apos;/tmp/mysql.sock&apos; (2) 解决办法：修改/etc/my.conf,添加以下内容： 123[mysql]socket=/var/lib/mysql/mysql.sockport=3306 注：[mysqld]”是针对服务端进行设置，[mysql]”是针对客户端访问进行设置","categories":[{"name":"mysql","slug":"mysql","permalink":"http://joycessh.xyz/categories/mysql/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://joycessh.xyz/tags/mysql/"}]},{"title":"linux学习之tar命令详解","slug":"linux学习之tar命令详解","date":"2018-09-28T13:33:26.000Z","updated":"2018-09-28T13:35:16.424Z","comments":true,"path":"linux学习之tar命令详解.html","link":"","permalink":"http://joycessh.xyz/linux学习之tar命令详解.html","excerpt":"tar命令详解","text":"tar命令详解 在linux下,tar是常用的解压缩命令,格式：tar [主选项+辅选项] 文件或目录,下面开始介绍tar命令的参数选项以及用法.主选项(主选项是必须要有,压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个) -c 创建新的档案文件 -r 把要存档的文件追加到档案文件的末尾 -t 列出档案文件的内容，查看已经备份了哪些文件 -u 更新文件。就是说，用新增的文件取代原备份文件，如果在备份文件中找不到要更新的文件，则把它追加到备份文件的最后 -x 从档案文件中释放文件 辅助选项(辅助选项是可选) -f 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。 -v 显示详细信息 -j 代表使用‘bzip2’程序进行文件的压缩 -z 用gzip来压缩/解压缩文件 -Z 用 compress 对存档压缩或解压 用法 将当前目录下所有.txt文件打包并压缩归档到文件this.tar.gz 1tar zcvf this.tar.gz ./*.txt 将当前目录下的all.tar.gz中的文件解压到指定目录/usr/local 1tar -zxvf all.tar.zip -C /usr/local 压缩1234567891011tar –cvf all.tar file //将文件打包为all.tartar –czf all.tar.gz file //将目录里所有文件打包成all.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为all.tar.gztar –cjf all.tar.bz2 file //将目录里所有文件打包成all.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为all.tar.bz2tar –cZf all.tar.Z file //将目录里所有文件打包成all.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为all.tar.Zrar a all.rar file //压缩为rar格式zip all.zip file //压缩为zip格式 解压123456789101112131415tar –xvf file.tar //解压 tar包tar -xzvf file.tar.gz //解压tar.gztar -xjvf file.tar.bz2 //解压 tar.bz2tar –xZvf file.tar.Z //解压tar.Zunrar e file.rar //解压rarunzip file.zip //解压zipbzip2 -dk file.bz2 //解压bz2, -k为保留压缩包bunzip2 -vk file.bz2 //解压bz2, -k为保留压缩包, -v为显示详细信息","categories":[{"name":"linux","slug":"linux","permalink":"http://joycessh.xyz/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://joycessh.xyz/tags/linux/"}]},{"title":"Hadoop学习笔记(一)","slug":"Hadoop学习笔记-一","date":"2018-09-27T09:04:23.000Z","updated":"2018-09-27T09:06:31.716Z","comments":true,"path":"Hadoop学习笔记-一.html","link":"","permalink":"http://joycessh.xyz/Hadoop学习笔记-一.html","excerpt":"Hadoop学习使用过程中会遇到一些问题,而方法总比问题多.在经过仔细查看和尝试之后,问题就会被解决,柳暗花明又一村.","text":"Hadoop学习使用过程中会遇到一些问题,而方法总比问题多.在经过仔细查看和尝试之后,问题就会被解决,柳暗花明又一村. Hadoop学习使用过程中会遇到一些问题,而方法总比问题多.在经过仔细查看和尝试之后,问题就会被解决,柳暗花明又一村.使用环境: CentOS-6.5 hadoop-2.5.2 jdk-7u71 在配置完Hadoop启动时出现如下WARNING信息:1WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable 网上的方法有两种 第一种是在$ .bash_profile文件里添加如下配置: 123export HADOOP_HOME=/home/hadoop/hadoop-2.6.4export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/nativeexport HADOOP_OPTS=&quot;-Djava.library.path=$HADOOP_HOME/lib:$HADOOP_COMMON_LIB_NATIVE_DIR&quot; 然后使之生效$ source .bash_profile 这种方法我尝试过,问题没能解决. 第二种方法: 用ldd命令查看依赖库 $ cd /usr/local/hadoop-2.5.2/lib/native $ ldd libhadoop.so.1.0.0 输出如下信息: 12345 ./libhadoop.so.1.0.0: /lib64/libc.so.6: version `GLIBC_2.14&apos; not found (required by ./libhadoop.so.1.0.0)linux-vdso.so.1 =&gt; (0x00007fff43dd3000)libdl.so.2 =&gt; /lib64/libdl.so.2 (0x00007fca3b541000)libc.so.6 =&gt; /lib64/libc.so.6 (0x00007fca3b1ac000)/lib64/ld-linux-x86-64.so.2 (0x000056507420c000) 依赖的都是/lib64/的动态库,而找不到GLIBC_2.14,使用命令ldd --version来查看系统的glibc库 输出如下信息: 12345ldd (GNU libc) 2.12Copyright (C) 2010 Free Software Foundation, Inc.This is free software; see the source for copying conditions. There is NOwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.Written by Roland McGrath and Ulrich Drepper. 系统预装的glibc库是2.12版本，而hadoop期望是2.14版本，所以打印警告信息。 解决办法: 直接在log4j日志中去除告警信息。在/usr/local/hadoop-2.5.2/etc/hadoop/log4j.properties文件中添加 1log4j.logger.org.apache.hadoop.util.NativeCodeLoader=ERROR 重新启动hadoop,问题解决 Hadoop开启开闭debug信息 开启: 1export HADOOP_ROOT_LOGGER=DEBUG,console 关闭: 1export HADOOP_ROOT_LOGGER=INFO,console","categories":[{"name":"Hadoop","slug":"Hadoop","permalink":"http://joycessh.xyz/categories/Hadoop/"}],"tags":[{"name":"Hadoop","slug":"Hadoop","permalink":"http://joycessh.xyz/tags/Hadoop/"}]},{"title":"virtualbox多虚拟机之间通信","slug":"virtualbox多虚拟机之间通信","date":"2018-09-21T16:41:28.000Z","updated":"2018-09-21T17:22:09.678Z","comments":true,"path":"virtualbox多虚拟机之间通信.html","link":"","permalink":"http://joycessh.xyz/virtualbox多虚拟机之间通信.html","excerpt":"通过Bridged Adapter模式实现virtualbox多虚拟机之间通信","text":"通过Bridged Adapter模式实现virtualbox多虚拟机之间通信 virtualbox多虚拟机之间通信NAT(网络地址转换模式)使用NAT模式，就是让虚拟系统借助NAT(网络地址转换)功能，通过宿主机器所在的网络来访问公网。NAT模式下的虚拟系统的TCP/IP配置信息是由virtualbox(NAT)虚拟网络的DHCP服务器提供的.NAT模式下只能单向访问,网络中的任何机器(包括宿主机)无法通过网络访问到虚拟机.虚拟机与虚拟机各自完全独立，相互间无法通过网络访问彼此。Bridged Adapter模式在桥接模式下，你需要手工为虚拟系统配置IP地址、子网掩码，而且还要和宿主机器处于同一网段，这样虚拟系统才能和宿主机器进行通信它使得虚拟机能被分配到一个网络中独立的IP，所有网络功能完全和在网络中的真实机器一样所以虚拟机可以跟主机,网络中的其他机器,虚拟机之间,彼此可以通过各自IP相互访问Internal内网模式 (略-_-,没弄过) Host-only Adapter模式 (略-_-)","categories":[{"name":"virtualbox","slug":"virtualbox","permalink":"http://joycessh.xyz/categories/virtualbox/"}],"tags":[{"name":"virtualbox","slug":"virtualbox","permalink":"http://joycessh.xyz/tags/virtualbox/"}]},{"title":"使用virtualbox安装centos6.5设置共享文件夹","slug":"使用virtualbox安装centos6.5设置共享文件夹","date":"2018-09-21T12:41:44.000Z","updated":"2018-09-21T12:47:35.768Z","comments":true,"path":"使用virtualbox安装centos6.5设置共享文件夹.html","link":"","permalink":"http://joycessh.xyz/使用virtualbox安装centos6.5设置共享文件夹.html","excerpt":"使用virtualbox安装centos6.5设置共享文件夹时遇到一些问题下面是我实践总结出来的方法","text":"使用virtualbox安装centos6.5设置共享文件夹时遇到一些问题下面是我实践总结出来的方法 使用virtualbox安装centos6.5设置共享文件夹virtualbox设置共享文件夹,需要安装增强工具VBoxGuestAdditions点击工具栏的Devices,选择Insert Guest Additions CDImage,下载安装在安装时提示错误,the headers of current running kernel was not fount… rpm -q gcc 提示gcc未安装,安装gcc yum install gcc 查看内核版本命令 uname -a 安装kernel kernel-devel kernel-headers yum install kernel kernel-devel kernel-headers 升级内核 yum update kernel ,重启系统,使用新的内核 安装增强工具后,挂载共享文件 mount -t vboxsf shareFile /mnt/Linux_share 共享成功系统开机,自动挂载共享文件,下面两种方法都已成功自动挂载第一种方法: 修改/etc/profile配置文件,在最后一行添加 mount -t vboxsf shareFile /mnt/Linux_share 第二种方法: 修改/etc/rc.local文件,在最后一行添加 mount -t vboxsf shareFile /mnt/Linux_share","categories":[{"name":"virtualbox","slug":"virtualbox","permalink":"http://joycessh.xyz/categories/virtualbox/"}],"tags":[{"name":"virtualbox","slug":"virtualbox","permalink":"http://joycessh.xyz/tags/virtualbox/"}]},{"title":"慕课网JavaScript深入浅出学习笔记之表达式和运算符","slug":"慕课网JavaScript深入浅出学习笔记之表达式和运算符","date":"2018-04-06T13:00:18.000Z","updated":"2018-04-06T13:03:22.205Z","comments":true,"path":"慕课网JavaScript深入浅出学习笔记之表达式和运算符.html","link":"","permalink":"http://joycessh.xyz/慕课网JavaScript深入浅出学习笔记之表达式和运算符.html","excerpt":"JavaScript表达式和运算符表达式 表达式是一种JS短语，可使JS解释器用来产生一个值。——《JavaScript权威指南》 原始表达式 常量、直接量 345, string 关键字 null，this 变量 a, b, c 复合表达式 # 原始表达式+运算符 a + b 数组、对象的初始化表达式","text":"JavaScript表达式和运算符表达式 表达式是一种JS短语，可使JS解释器用来产生一个值。——《JavaScript权威指南》 原始表达式 常量、直接量 345, string 关键字 null，this 变量 a, b, c 复合表达式 # 原始表达式+运算符 a + b 数组、对象的初始化表达式 123[1, 2] == new Array(1, 2);[a,,b] == [a, undedined, b]&#123;c: 1, d: 2&#125; 函数表达式 var foo = function(){}; 属性访问表达式 var a = {x: 1}; 可以通过 a.x、a[&#39;x&#39;] 访问对象的属性 调用表达式 function(); 对象创建表达式 new Func(x, y); 运算符按照操作数的数量分类： 一元 - x 二元 a + b 三元 c ? a : b 按照运算符的功能分类： 赋值 x += 1 # =、+=、-= 比较 x == y # ==、&lt;、&gt; 算术 x - y # +、-、*、/、% 位 a | b 逻辑 exp1 &amp;&amp; exp2 字符串 &quot;a&quot; + &quot;b&quot; 特殊 delete obj.x new in instanceof 运算符优先级，从高到低排列：摘自MDN 优先级 运算类型 关联性 运算符 20 圆括号 n/a ( … ) 19 成员访问 从左到右 … . … 需计算的成员访问 从左到右 … [ … ] new (带参数列表) n/a new … ( … ) 函数调用 从左到右 … ( … ) 18 new (无参数列表) 从右到左 new … 17 后置递增(运算符在后) n/a … ++ 后置递减(运算符在后) … -- 16 逻辑非 从右到左 ! … 按位非 ~ … 一元加法 + … 一元减法 - … 前置递增 ++ … 前置递减 -- … typeof typeof … void void … delete delete … await await … 15 幂 从右到左 … ** … 14 乘法 从左到右 … * … 除法 … / … 取模 … % … 13 加法 从左到右 … + … 减法 … - … 12 按位左移 从左到右 … &lt;&lt; … 按位右移 … &gt;&gt; … 无符号右移 … &gt;&gt;&gt; … 11 小于 从左到右 … &lt; … 小于等于 … &lt;= … 大于 … &gt; … 大于等于 … &gt;= … in … in … instanceof … instanceof … 10 等号 `从左到右 … == …` 非等号 … != … 全等号 … === … 非全等号 … !== … 9 按位与 从左到右 … &amp; … 8 按位异或 从左到右 … ^ … 7 按位或 从左到右 … 丨 … 6 逻辑与 从左到右 … &amp;&amp; … 5 逻辑或 从左到右 … 丨丨 … 4 条件运算符 从右到左 … ? … : … 3 赋值 从右到左 … = … … += … … -= … … *= … … /= … … %= … … &lt;&lt;= … … &gt;&gt;= … … &gt;&gt;&gt;= … … &amp;= … … ^= … … 丨= … 2 yield 从右到左 yield … yield* yield* … 1 展开运算符 n/a ... … 0 逗号 从左到右 … , …","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://joycessh.xyz/categories/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://joycessh.xyz/tags/JavaScript/"}]},{"title":"慕课网JavaScript深入浅出学习笔记之数据类型","slug":"慕课网JavaScript深入浅出学习笔记之数据类型","date":"2018-04-01T03:30:40.000Z","updated":"2018-05-31T14:39:03.172Z","comments":true,"path":"慕课网JavaScript深入浅出学习笔记之数据类型.html","link":"","permalink":"http://joycessh.xyz/慕课网JavaScript深入浅出学习笔记之数据类型.html","excerpt":"","text":"JavaScript数据类型六种数据类型(五种原始类型，一种对象类型) number sttring boolean null undefined object #对象 Function Array Date … javascript数据类型是弱数据类型，在定义变量时无需指定数据类型。1234567var num = 32;num = &quot;this is a string&quot;;32 + 32 // 64 #加法运算//&quot;+&quot;理解为字符串拼接，&quot;-&quot;理解为减法运算&quot;32&quot; + 32 // &quot;3232&quot; # 字符串拼接&quot;32&quot; - 32 // 0 # 减法运算 隐式转换巧用“+”/“-“规则转换类型12345var num = &quot;string&quot;；num - 0 //将num对象转换为numbervar num = 123；num + &quot;&quot; //将num对象转换为string a === b #严格等于 首先判断类型，类型不同，返回false 类型相同： number //数值一样 string //长度和内容都一样 null === null undefined === undefined NaN != NaN //NaN跟任何东西比较都不相等，包括跟自己比较。 new object != new object //就算是两个空对象，也不相等。 [1, 2] != [1, 2] //内容相同，顺序一样，也不相等，因为她们不是完全相同的对象 JavaScript中，对象的比较是用引用去比较的 a == b #等于 类型相同，同=== 类型不同，尝试类型转换再比较： null == undefined //true number == string //尝试把string转number，1 == “1.0”为true boolean == ? //boolean转number，true = 1， false = 0 object == number | string //尝试把对象转为基本类型 new String(‘hh’) == ‘hi’ //true 其他：false 包装对象123var str = &quot;string&quot;; //string类型var strObj = new String(&quot;string&quot;); //对象类型，string对应的包装类str.length //str为基本类型，没有属性。当str访问length属性时，javascript会把基本类型转换为对应的包装对象 类型检测typeof适合检测基本类型和function，遇到null失效 12345678typeof 100 &quot;number&quot;typeof true &quot;boolean&quot;typeof function &quot;function&quot;typeof(undefined) &quot;undefined&quot;typeof new Object() &quot;object&quot;typeof [1, 2] &quot;object&quot;typeof NaN &quot;number&quot;typeof null &quot;object&quot; #返回object而不是null，是由于历史原因 instanceofinstanceof操作符是基于原型链去判断，用法：obj instanceof Object注意： 不同的window或iframe之间的对象类型检测不能使用instanceof！ 可以用来检测自定义对象以及原生对象 12[1, 2] instanceof Array === truenew Object() instanceof Array ===false Object.prototype.toString.apply()适合内置对象和基本类型，用来检测null会存在兼容性问题 123456Object.prototype.toString.apply([]); === &quot;[object Array]&quot;Object.prototype.toString.apply(function()&#123;&#125;); === &quot;[object Function]&quot;Object.prototype.toString.apply(null); === &quot;[object Null]&quot;Object.prototype.toString.apply(unfefined); === &quot;[object Undefined]&quot;IE6/7/8 Object.prototype.toString.apply(null); 返回&quot;[object Object]&quot;","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://joycessh.xyz/categories/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://joycessh.xyz/tags/JavaScript/"}]},{"title":"我是如何使用hexo+github pages搭建个人博客","slug":"我是如何使用hexo-github-pages搭建个人博客","date":"2018-04-01T03:30:40.000Z","updated":"2018-04-17T13:57:41.967Z","comments":true,"path":"我是如何使用hexo-github-pages搭建个人博客.html","link":"","permalink":"http://joycessh.xyz/我是如何使用hexo-github-pages搭建个人博客.html","excerpt":"Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。","text":"Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 搭建博客的基本流程 我所用的系统环境为deepin15.5，已经安装好Git。先检查电脑是否已经安装SSH：ls -al ~/.ssh ， 如果有id_rsa（私钥），id_rsa_pub（公钥）文件就表示安装好了。测试一下： ssh -T git@github.com 进入github主页新建一个仓库，格式：USERNAME.github.io 我们要设置主题，点击-setting，change theme 选择一个主题，发布 在浏览器输入USERNAME.github.io，你会看到博客主页 创建的远程分支有hexo、master，设置hexo为默认分支。 hexo分支 #用来存放网站的资源文件 master分支 #用来存放部署的静态网页 安装Hexo的流程 装Hexo需要安装Node.js、Git ，安装Node.js，下面是使用nvm安装的方法：wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh安装完成后，重启终端并执行命令npm instal stable即可安装 Node.js。 使用npm install -g hexo-cli安装Hexo 使用git clone git@github.com:USERNAME/USERNAME.github.io.git拷贝仓库，此时为默认分支hexo USERNAME.github.io.git目录一般有.git、_comfig.yml和index.md，把.git文件复制出来，删除掉 _comfig.yml和index.md文件。此时USERNAME.github.io.git目录为空，执行hexo init（建立博客所需的文件）、npm install （安装依赖包），把之前复制出来.git文件黏贴回去进行覆盖 到这里，Hexo博客已经搭建好了本地的服务，执行命令hexo g和hexo s --debug在浏览器中输入localhost:4000就可以看到博客主页了 关联Github Piges，编辑_config.yml文件，修改：#Deployment ##Docs: https://hexo.io/docs/deployment.html deploy: type: git repository: https://github.com/USERNAME/USERNAME.github.io branch: master 为了能够使Hexo部署到GitHub上，需要安装一个插件： npm install hexo-deployer-git --save 平时工作都是在分支hexo，并不影响部署。执行命令hexo g -d在浏览器输入USERNAME.github.io ,即可看到博客首页 推送网站相关的文件1234git status #查看本地文件的状态git add . #将所有更新的本地文件添加到版本控制系统中git commit -m &apos;更新信息说明&apos; #提交git push origin hexo #推送到远程仓库 同步源码到其他电脑 安装hexonpm install hexo，使用git clone git@github.com:USERNAME/USERNAME.github.io.git拷贝仓库，默认分支为hexo，在USERNAME.github.io.git目录下执行下面代码：12npm installnpm install hexo-deployer-git --save 使用其他主题的方法： 使用git clone拷贝到USERNAME.github.io/themes下,例如：12$ cd USERNAME.github.io #你的根目录$ git clone https://github.com/theme-next/hexo-theme-next themes/next 再将站点配置文件_config.yml中的theme: landscape改为对应的主题名字。 123## Themes: https://hexo.io/themes/theme: next 主题的配置是在/themes/next/_config.yml文件里面 Hexo常用命令： hexo n “title” == hexo new “title” #新建文章,在source/_posts生成.md文件 hexo new page “pageName” #新建页面 hexo clean #清除缓存文件 hexo generate == hexo g #生成静态网页 hexo server == hexo s #开启服务，默认localhost：4000 hexo s –debug #启动本地站点，并开启调试模式 hexo deploy == hexo d #部署到Github Pages 发布文章的流程： hexo new “title” #新建文章，使用markdown编辑器编写，如atom。或者直接把写好md文件放到source/_posts下 hexo generate #生成静态页面 hexo server #预览，localhost:4000 hexo deploy #部署到github（博文发布） 绑定阿里云域名 先到阿里云注册一个域名，按提示来走就行，很简单。 在source目录创建一个CNAME文件，内容是你的域名xxx.xyz。github会读取CNAME文件，将USERNAME.github.io重定向到xxx.xyz。当我们提交CNAME文件时，github就会帮我们自动部署了。 进入阿里云管理控制台，云解析DNS，添加两条解析 记录类型 主机记录 解析线路 记录值 CNAME www 默认 USERNAME.github.io CNAME @ 默认 USERNAME.github.io 这样配的好处是有无www都能访问你的网站 等一会，刷新网页，神奇的事情就发生了：） 参考资料： http://theme-next.iissnan.com/getting-started.htmlhttp://codepub.cn/2016/03/20/Hexo-blog-theme-switching-from-Jacman-to-NexT-Mist/https://blog.csdn.net/MasterAnt_D/article/details/56839222https://segmentfault.com/a/1190000002632530http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://joycessh.xyz/tags/Hexo/"}]},{"title":"开始我的独立博客之旅","slug":"开始我的独立博客之旅","date":"2018-03-29T17:03:23.000Z","updated":"2018-05-31T14:38:12.915Z","comments":true,"path":"开始我的独立博客之旅.html","link":"","permalink":"http://joycessh.xyz/开始我的独立博客之旅.html","excerpt":"所谓博客，不过是孤芳自赏。","text":"所谓博客，不过是孤芳自赏。 你好，我的博客Joycessh’s Blog！关于我的博客，不管文笔怎么样，都要坚持原创，只写自己经历的，以后回过头来看自己写的，心里当然是美滋滋的！总之，算是开启了我的独立博客之旅，这里是我的另一片天空，以后要用心写好每一篇文章。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-03-27T03:00:00.000Z","updated":"2018-03-30T06:10:22.823Z","comments":true,"path":"hello-world.html","link":"","permalink":"http://joycessh.xyz/hello-world.html","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://joycessh.xyz/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://joycessh.xyz/tags/Hexo/"}]}]}